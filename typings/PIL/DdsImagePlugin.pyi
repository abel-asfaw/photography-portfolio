"""
This type stub file was generated by pyright.
"""

from . import ImageFile

"""
A Pillow loader for .dds files (S3TC-compressed aka DXTC)
Jerome Leclanche <jerome@leclan.ch>

Documentation:
  https://web.archive.org/web/20170802060935/http://oss.sgi.com/projects/ogl-sample/registry/EXT/texture_compression_s3tc.txt

The contents of this file are hereby released in the public domain (CC0)
Full text of the CC0 license:
  https://creativecommons.org/publicdomain/zero/1.0/
"""
DDS_MAGIC = ...
DDSD_CAPS = ...
DDSD_HEIGHT = ...
DDSD_WIDTH = ...
DDSD_PITCH = ...
DDSD_PIXELFORMAT = ...
DDSD_MIPMAPCOUNT = ...
DDSD_LINEARSIZE = ...
DDSD_DEPTH = ...
DDSCAPS_COMPLEX = ...
DDSCAPS_TEXTURE = ...
DDSCAPS_MIPMAP = ...
DDSCAPS2_CUBEMAP = ...
DDSCAPS2_CUBEMAP_POSITIVEX = ...
DDSCAPS2_CUBEMAP_NEGATIVEX = ...
DDSCAPS2_CUBEMAP_POSITIVEY = ...
DDSCAPS2_CUBEMAP_NEGATIVEY = ...
DDSCAPS2_CUBEMAP_POSITIVEZ = ...
DDSCAPS2_CUBEMAP_NEGATIVEZ = ...
DDSCAPS2_VOLUME = ...
DDPF_ALPHAPIXELS = ...
DDPF_ALPHA = ...
DDPF_FOURCC = ...
DDPF_PALETTEINDEXED8 = ...
DDPF_RGB = ...
DDPF_LUMINANCE = ...
DDS_FOURCC = ...
DDS_RGB = ...
DDS_RGBA = ...
DDS_LUMINANCE = ...
DDS_LUMINANCEA = ...
DDS_ALPHA = ...
DDS_PAL8 = ...
DDS_HEADER_FLAGS_TEXTURE = ...
DDS_HEADER_FLAGS_MIPMAP = ...
DDS_HEADER_FLAGS_VOLUME = ...
DDS_HEADER_FLAGS_PITCH = ...
DDS_HEADER_FLAGS_LINEARSIZE = ...
DDS_HEIGHT = ...
DDS_WIDTH = ...
DDS_SURFACE_FLAGS_TEXTURE = ...
DDS_SURFACE_FLAGS_MIPMAP = ...
DDS_SURFACE_FLAGS_CUBEMAP = ...
DDS_CUBEMAP_POSITIVEX = ...
DDS_CUBEMAP_NEGATIVEX = ...
DDS_CUBEMAP_POSITIVEY = ...
DDS_CUBEMAP_NEGATIVEY = ...
DDS_CUBEMAP_POSITIVEZ = ...
DDS_CUBEMAP_NEGATIVEZ = ...
DXT1_FOURCC = ...
DXT3_FOURCC = ...
DXT5_FOURCC = ...
DXGI_FORMAT_R8G8B8A8_TYPELESS = ...
DXGI_FORMAT_R8G8B8A8_UNORM = ...
DXGI_FORMAT_R8G8B8A8_UNORM_SRGB = ...
DXGI_FORMAT_BC5_TYPELESS = ...
DXGI_FORMAT_BC5_UNORM = ...
DXGI_FORMAT_BC5_SNORM = ...
DXGI_FORMAT_BC6H_UF16 = ...
DXGI_FORMAT_BC6H_SF16 = ...
DXGI_FORMAT_BC7_TYPELESS = ...
DXGI_FORMAT_BC7_UNORM = ...
DXGI_FORMAT_BC7_UNORM_SRGB = ...
class DdsImageFile(ImageFile.ImageFile):
    format = ...
    format_description = ...
    def load_seek(self, pos): # -> None:
        ...
    


