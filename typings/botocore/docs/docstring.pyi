"""
This type stub file was generated by pyright.
"""

class LazyLoadedDocstring(str):
    """Used for lazily loading docstrings

    You can instantiate this class and assign it to a __doc__ value.
    The docstring will not be generated till accessed via __doc__ or
    help(). Note that all docstring classes **must** subclass from
    this class. It cannot be used directly as a docstring.
    """
    def __init__(self, *args, **kwargs) -> None:
        """
        The args and kwargs are the same as the underlying document
        generation function. These just get proxied to the underlying
        function.
        """
        ...
    
    def __new__(cls, *args, **kwargs): # -> Self:
        ...
    
    def expandtabs(self, tabsize=...): # -> str:
        """Expands tabs to spaces

        So this is a big hack in order to get lazy loaded docstring work
        for the ``help()``. In the ``help()`` function, ``pydoc`` and
        ``inspect`` are used. At some point the ``inspect.cleandoc``
        method is called. To clean the docs ``expandtabs`` is called
        and that is where we override the method to generate and return the
        docstrings.
        """
        ...
    
    def __str__(self) -> str:
        ...
    
    __repr__ = ...


class ClientMethodDocstring(LazyLoadedDocstring):
    ...


class WaiterDocstring(LazyLoadedDocstring):
    ...


class PaginatorDocstring(LazyLoadedDocstring):
    ...


