"""
This type stub file was generated by pyright.
"""

from botocore.exceptions import BotoCoreError
from botocore.utils import CachedProperty

logger = ...
class EndpointDiscoveryException(BotoCoreError):
    ...


class EndpointDiscoveryRequired(EndpointDiscoveryException):
    """Endpoint Discovery is disabled but is required for this operation."""
    fmt = ...


class EndpointDiscoveryRefreshFailed(EndpointDiscoveryException):
    """Endpoint Discovery failed to the refresh the known endpoints."""
    fmt = ...


def block_endpoint_discovery_required_operations(model, **kwargs): # -> None:
    ...

class EndpointDiscoveryModel:
    def __init__(self, service_model) -> None:
        ...
    
    @CachedProperty
    def discovery_operation_name(self): # -> str:
        ...
    
    @CachedProperty
    def discovery_operation_keys(self): # -> list[Any]:
        ...
    
    def discovery_required_for(self, operation_name): # -> Literal[False]:
        ...
    
    def discovery_operation_kwargs(self, **kwargs): # -> dict[str, Any]:
        ...
    
    def gather_identifiers(self, operation, params): # -> dict[Any, Any]:
        ...
    


class EndpointDiscoveryManager:
    def __init__(self, client, cache=..., current_time=..., always_discover=...) -> None:
        ...
    
    def gather_identifiers(self, operation, params): # -> dict[Any, Any]:
        ...
    
    def delete_endpoints(self, **kwargs): # -> None:
        ...
    
    def describe_endpoint(self, **kwargs): # -> Any | None:
        ...
    


class EndpointDiscoveryHandler:
    def __init__(self, manager) -> None:
        ...
    
    def register(self, events, service_id): # -> None:
        ...
    
    def gather_identifiers(self, params, model, context, **kwargs): # -> None:
        ...
    
    def discover_endpoint(self, request, operation_name, **kwargs): # -> None:
        ...
    
    def handle_retries(self, request_dict, response, operation, **kwargs): # -> Literal[0] | None:
        ...
    


